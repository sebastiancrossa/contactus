{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","defaultProps","propType","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5f447db.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state, // gets the initial state\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({ contacts: res.data });\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n// We want to be able to use Consumer instead of Context.Consumer","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n\n                    return (\n                        <div className=\"card card-body mb-3 ml-3 mr-3\">\n                            <h4>{name}\n                                <i\n                                    onClick={() => this.setState({ showContactInfo: !showContactInfo })} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }} />\n\n                                <i\n                                    className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                />\n\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem'\n                                        }} />\n                                </Link>\n\n                            </h4>\n\n                            {showContactInfo ? (<ul className=\"list-group\">\n                                <li className=\"list-group-item\">{email}</li>\n                                <li className=\"list-group-item\">{phone}</li>\n                            </ul>) : null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.defaultProps = {\n    name: 'Name here',\n    email: 'Email here',\n    phone: 'Phone Number here'\n};\n\nContact.propType = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\n\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n\n                    return (\n                        <React.Fragment>\n\n                            <h1 className=\"display-4 mb-3 mr-3 ml-3\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    // What we expect to have in this component\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n\n            {error && <div className='invalid-feedback'>{error}</div>}\n\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n            name: 'Name is required',\n            email: 'Email is required',\n            phone: 'Phone number is required'\n        }\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault(); // prevents JS from submiting to a file\n\n        const { name, email, phone } = this.state;\n\n        // MARK : ERROR CHECK\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Name is required' } });\n            return;\n        }\n        // MARK : END ERROR CHECK\n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n        // Will clear the state after submiting a new contact\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n\n                    return (\n                        <div className=\"card mb-3 ml-3 mr-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Enter name...\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        value={email}\n                                        type=\"email\"\n                                        placeholder=\"Enter email...\"\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        type=\"tel\"\n                                        placeholder=\"Enter phone number...\"\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\"\n                                        value=\"Add Contact\"\n                                        className=\"btn btn-light btn-block\" />\n\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault(); // prevents JS from submiting to a file\n\n        const { name, email, phone } = this.state;\n\n        // MARK : ERROR CHECK\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Name is required' } });\n            return;\n        }\n        // MARK : END ERROR CHECK\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n\n        // Gets the id form the param\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n        // Will clear the state after submiting a new contact\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n\n                    return (\n                        <div className=\"card mb-3 ml-3 mr-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Enter name...\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        value={email}\n                                        type=\"email\"\n                                        placeholder=\"Enter email...\"\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        type=\"tel\"\n                                        placeholder=\"Enter phone number...\"\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\"\n                                        value=\"Update Contact\"\n                                        className=\"btn btn-light btn-block\" />\n\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n    const { branding } = props;\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-ie\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"></i> Home\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-ie\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-add\"></i> Add\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-ie\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\"></i> About\n                            </Link>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\n// Styling\nconst headingStyle = {\n    color: 'red',\n    margin: '20px',\n    fontSize: '28px'\n};\n\n\n// Prop Settings\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contactactus</h1>\n            <p className=\"lead\">Simple contact manager app built with React.</p>\n            <p className=\"text-secondary\">v1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> page not found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound'\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contactus\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}